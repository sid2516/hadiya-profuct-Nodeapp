{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/models/product.model';\nimport { SingleProductResponseMapper } from 'src/app/utils/response-mappers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/products.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport let AddUpdateFormComponent = /*#__PURE__*/(() => {\n  class AddUpdateFormComponent {\n    constructor(productService, fb, route, router) {\n      this.productService = productService;\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.isUpdate = false;\n      this.productForm = this.fb.group({\n        name: [\"\", Validators.compose([Validators.required, Validators.maxLength(400)])],\n        price: [\"\", Validators.compose([Validators.required, Validators.min(0), Validators.max(1000000)])],\n        currency: [\"\", Validators.required],\n        imageURL: [\"\", Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      const productId = this.route.snapshot.params['id'];\n\n      if (productId) {\n        this.isUpdate = true;\n        this.productService.getProductById(productId).subscribe(response => {\n          this.product = SingleProductResponseMapper(response.data);\n          this.populate();\n        });\n      }\n    }\n\n    populate() {\n      this.productForm.controls['name'].setValue(this.product.getName());\n      this.productForm.controls['price'].setValue(this.product.getPrice().toString());\n      this.productForm.controls['currency'].setValue(this.product.getCurency());\n      this.productForm.controls['imageURL'].setValue(this.product.getImageURL());\n    }\n\n    onSubmit() {\n      if (this.productForm.value) {\n        if (this.isUpdate) {\n          const product = new Product(this.productForm.value.name ? this.productForm.value.name : this.product.getName(), this.productForm.value.price ? +this.productForm.value.price : this.product.getPrice(), this.productForm.value.currency ? this.productForm.value.currency : this.product.getCurency(), this.productForm.value.imageURL ? this.productForm.value.imageURL : this.product.getImageURL(), this.product.getId());\n          this.productService.updateProduct(product).subscribe(response => {\n            this.router.navigateByUrl('/');\n          });\n        } else {\n          const product = new Product(this.productForm.value.name ? this.productForm.value.name : \"\", this.productForm.value.price ? +this.productForm.value.price : +\"0\", this.productForm.value.currency ? this.productForm.value.currency : \"\", this.productForm.value.imageURL ? this.productForm.value.imageURL : \"\");\n          this.productService.addProduct(product).subscribe(response => {\n            this.router.navigateByUrl('/');\n          });\n        }\n      }\n    }\n\n  }\n\n  AddUpdateFormComponent.ɵfac = function AddUpdateFormComponent_Factory(t) {\n    return new (t || AddUpdateFormComponent)(i0.ɵɵdirectiveInject(i1.ProductsService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AddUpdateFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUpdateFormComponent,\n    selectors: [[\"app-add-update-form\"]],\n    decls: 32,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-title\"], [1, \"form-group\"], [\"for\", \"product-name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"product-name\", \"placeholder\", \"eg. Titan watch\", 1, \"form-control\"], [1, \"form-group\", \"row\"], [1, \"price\", \"col-md-3\"], [\"for\", \"product-price\"], [\"type\", \"number\", \"formControlName\", \"price\", \"id\", \"product-price\", \"placeholder\", \"eg. 100.00\", 1, \"form-control\"], [1, \"currency\", \"col-md-3\"], [\"for\", \"product-currency\"], [\"name\", \"currency\", \"formControlName\", \"currency\", \"id\", \"currency\", 1, \"form-control\", \"form-select\"], [\"selected\", \"\"], [\"value\", \"INR\"], [\"value\", \"USD\"], [\"for\", \"product-image-url\"], [\"type\", \"url\", \"formControlName\", \"imageURL\", \"id\", \"product-image-url\", \"placeholder\", \"eg. https://my-image-url.jpg\", 1, \"form-control\"], [1, \"form-group\", \"actions\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-outline-danger\"]],\n    template: function AddUpdateFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddUpdateFormComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"New product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 12)(17, \"option\", 13);\n        i0.ɵɵtext(18, \"Select currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 14);\n        i0.ɵɵtext(20, \"INR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 15);\n        i0.ɵɵtext(22, \"USD\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 16);\n        i0.ɵɵtext(25, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 18)(28, \"button\", 19);\n        i0.ɵɵtext(29, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"a\", 20);\n        i0.ɵɵtext(31, \"Discard\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"disabled\", !ctx.productForm.valid);\n      }\n    },\n    dependencies: [i3.RouterLinkWithHref, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]{max-width:70%;margin:0 auto}.form-title[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]{margin-bottom:2rem}.actions[_ngcontent-%COMP%]{text-align:center}.actions[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .actions[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{margin:0 2rem;width:8rem}\"]\n  });\n  return AddUpdateFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}